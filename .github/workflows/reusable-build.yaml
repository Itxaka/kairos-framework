name: Reusable Build Framework Image

on:
  workflow_call:
    inputs:
      security_profile:
        required: true
        type: string

jobs:
  build-framework:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # OIDC support
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Calculate Repository
        run: |
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "REPOSITORY=ttl.sh/kairos-framework" >> $GITHUB_ENV
            else
              echo "REPOSITORY=quay.io/kairos/framework" >> $GITHUB_ENV
            fi
      - name: Calculate Suffix
        run: |
            if [[ "${{ inputs.security_profile }}" == "fips" ]]; then
              echo "SUFFIX=-fips" >> $GITHUB_ENV
              echo "FLAVOR=suffix=-fips,onlatest=true" >> $GITHUB_ENV
            else
              echo "SUFFIX=" >> $GITHUB_ENV
              echo "FLAVOR=" >> $GITHUB_ENV
            fi
      - name: Login to Quay Registry
        if: ${{ github.event_name == 'push' }}
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REPOSITORY }}
          flavor: ${{ env.FLAVOR }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
      - name: print labels and tags
        run: |
          echo "lables: ${{ steps.meta.outputs.labels }}"
          echo "tags: ${{ steps.meta.outputs.tags }}"
          echo "version: ${{ steps.meta.outputs.version }}"
      - name: Build and push framework
        uses: docker/build-push-action@v5
        with:
          sbom: false
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: final
          build-args: |
            SECURITY_PROFILE=${{ inputs.security_profile }}
      - name: Cosign image
        env:
          COSIGN_YES: true
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cosign sign ${{ env.REPOSITORY }}:${{ steps.meta.outputs.version }}
      - name: Extract versions
        run: |
          docker run --name framework ${{ env.REPOSITORY }}:${{ steps.meta.outputs.version }} true || true
          docker cp framework:/etc/kairos/versions.yaml ./versions${{ env.SUFFIX }}.new.yaml
          .github/yaml2md.sh ./versions${{ env.SUFFIX }}.new.yaml >> $GITHUB_STEP_SUMMARY
          docker rm framework
      - uses: actions/upload-artifact@v3
        with:
          name: versions${{ env.SUFFIX }}.zip
          path: |
            versions${{ env.SUFFIX }}.new.yaml
          if-no-files-found: error
